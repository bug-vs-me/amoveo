(define (die)
  (return 9999999 0 0))
(define (require b)
  (cond (b ())
        (true (die))))

(define (helper pdv MarketID) ;given the full oracle data provided by the blockchain, produce the integer result of that oracle. There are 4 possible outputs: 0,1,2, or 3. 0 means it is still open. 1 means true. 2 means false. 3 means it was a bad question.
  (let (((version pd) (car@ pdv))
        ((MarketID2 pd) (car@ pd))
        (pd (car pd))
        ((T _) (split pd 32))
        ((_ Result) (split T 1))
        )
    ((require (= 5 version))
     (require (= MarketID2 MarketID))
     (++ --AAAA Result))));switch from 1 byte binary to a integer representation.

(define (extract signed_price_declaration Pubkey MarketID Height)
  (let (((sig data) (split signed_price_declaration 40))
        ((R DeclaredHeight) (split data 4))
        ((R DeclaredPrice) (split R 2))
        (DeclaredPrice (++ --AAA= DeclaredPrice))
        ((MarketID2 PortionMatched) (split R 2))
        (PortionMatched (++ --AAA= PortionMatched))
        )
    ((require (verify_sig sig data Pubkey))
     (require (= MarketID MarketID2))
     (require (not (< DeclaredHeight Height)))
     DeclaredHeight DeclaredPrice PortionMatched
     )))
(define (price_range F maxprice)
  (/ (* 10000 F)
     (+ maxprice 10000)))
(define (abs a)
  (cond ((< a 0) (- 0 a))
        (true a)))
(define (minus_zero a b)
  (cond ((> a b) (- a b))
        (true 0)))
(define (bet oracle_result Direction MaxPrice)
  (cond ((= Direction oracle_result) 10000)
         ((and (> oracle_result 0)
               (< oracle_result 3))
          0)
         (true (- 10000 MaxPrice))))
(define (evidence Pubkey MarketID Height Expires Period MaxPrice)
  (let ((spd ())
        ((DeclaredHeight _ PortionMatched) (extract spd Pubkey MarketID Height)))
    ((require (> DeclaredHeight (- height Period)))
     (return (- Expires height);delay
             (+ 1 (/ DeclaredHeight Period));nonce
             (price_range (- 10000 MaxPrice) MaxPrice);amount
             ))))
(define (contradictory_prices Pubkey MarketID Height)
  (let (((spd1 spd2) ())
        ((h1 p1 pm1) (extract spd1 Pubkey MarketID Height))
        ((h2 p2 pm2) (extract spd2 Pubkey MarketID Height)))
    ((require (or (not (= p1 p2))
                  (not (= pm1 pm2))))
     (return 0 2000000 0))))
(define (match_order MaxPrice OracleData Expires Pubkey MarketID Height Direction)
  (let (((spd) ())
        ((h p pm) (extract spd Pubkey MarketID Height))
        (p (cond ((= Direction 2) (- 10000 p))
                 (true p)))
        (oracle_result (helper OracleData MarketID))
        (nonce (+ (minus_zero Expires h)
                  (cond (oracle_result 3)
                         (true 1))))
        (delay (cond (oracle_result 0)
                      (true (+ Expires
                               (minus_zero Expires
                                           height)))))
        (amount (bet oracle_result Direction MaxPrice))
        (amount2 (cond ((= MaxPrice p)
                         (/ (+ (* pm amount)
                               (* (- 10000 MaxPrice)
                                  (- 10000 pm)))
                            10000))
                        (true
                         (+ amount
                            (- MaxPrice
                               p))))))
    (return delay nonce (price_range amount2 MaxPrice))))
(define (unmatched oracle_data Expires Period MaxPrice MarketID)
  (cond ((= 0 (helper oracle_data MarketID))
          (return (+ 2000 (+ Expires Period))
                  0
                  (price_range (- 10000 MaxPrice) MaxPrice)))
         (true (return Period 1 (price_range (- 10000 MaxPrice) MaxPrice)))))
(define (no_publish Period)
  (return Period (/ height Period) 0))

(let (((Period Pubkey) ())
      ((mode OracleData0 Direction Height Expires MaxPrice MarketID) ())
      (OracleData (car OracleData0))
      )
  (cond ((= mode 0) (no_publish Period))
         ((= mode 1) (match_order MaxPrice OracleData Expires Pubkey MarketID Height Direction))
         ((= mode 2) (contradictory_prices Pubkey MarketID Height))
         ((= mode 3) (evidence Pubkey MarketID Height Expires Period MaxPrice))
         ((= mode 4) (unmatched OracleData Expires Period MaxPrice MarketID))
         (true (die))))
print
